name: Deploy to EC2
on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    steps:
      - name: git repository 파일 로딩
        uses: actions/checkout@v4

      - name: jdk설치
        uses: actions/setup-java@v4
        with:
          distribution: temurin
          java-version: 17

      - name: application.yml생성및 복사
        run: echo "${{secrets.APPLICATION_PROPERTIES}}" > ./src/main/resources/application.yml

      - name: gradlew permision 수정
        run: sudo chmod 777 ./gradlew

      - name: 테스트 및 빌드하기
        run: ./gradlew clean build -x test

      - name: AWS Resource에 접근할 수 있게 AWS credentials 설정
        uses: aws-actions/configure-aws-credentials@v4
        with:
          aws-region: ap-northeast-2
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}

      - name: ECR에 로그인
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v2

      - name: docker 이미지 생성
        run: docker build -t board-server .

      - name: 생성된 이미지에 태그
        run: docker tag board-server:latest 842675991282.dkr.ecr.ap-northeast-2.amazonaws.com/dockerdiveserver:latest

      - name: Ecr에 푸쉬
        run: docker push 842675991282.dkr.ecr.ap-northeast-2.amazonaws.com/dockerdiveserver:latest

      - name: Ec2에 접속
        uses: appleboy/ssh-action@master
        with:
          host: ${{secrets.EC2_HOST}}
          username: ${{secrets.EC2_USERNAME}}
          key: ${{secrets.EC2_PRIVATE_KEY}}
          script_stop: true
          script: |
            docker stop my-server || true
            docker rm my-server||true
            docker pull 842675991282.dkr.ecr.ap-northeast-2.amazonaws.com/dockerdiveserver:latest
            docker run -d --name my-server -p 8070:8070 842675991282.dkr.ecr.ap-northeast-2.amazonaws.com/dockerdiveserver:latest



